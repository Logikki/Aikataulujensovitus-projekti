{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3003/api/privatecalendar';\nconst SharedCalendarBaseUrl = 'http://localhost:3003/api/sharedcalendar';\nlet token = null;\n//kirjautumisen jälkeen asetetaan tähän token\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n/**\n * sharedCalendar muotoa \n * @param password Tämä on password stringinä, se hashataan sitten backendissä\n *  funktiolla luodaan uusi jaettu kalenteri\n * @returns uuden luodun jaetun kalenterin ID stringinä\n */\nconst createSharedCalendar = async password => {\n  const newObj = {\n    password: password\n  };\n  const response = await axios.post(SharedCalendarBaseUrl, newObj);\n  return response.data;\n};\n\n/**\n * @param newObject on privateCalendar, joka halutaan lisätä\n */\nconst createPrivateCalendar = async newObject => {\n  //lisätään objektiin tieto jaetun kalenterin id:stä. Tämä parsetaan sitten backendissä takaisin.\n  const requestObj = {\n    headers: {\n      Authorization: token\n    },\n    //sharedCalendarID: sharedCalendarID,\n    ...newObject\n  };\n  const response = await axios.post(baseUrl, requestObj, config);\n  console.log(response);\n  return response.data;\n};\nconst getSharedCalendar = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const request = axios.get(`${SharedCalendarBaseUrl}/${id}`, config);\n  return request.then(response => response.data);\n};\nexport default {\n  setToken,\n  createSharedCalendar,\n  createPrivateCalendar,\n  getSharedCalendar\n};","map":{"version":3,"names":["axios","baseUrl","SharedCalendarBaseUrl","token","setToken","newToken","createSharedCalendar","password","newObj","response","post","data","createPrivateCalendar","newObject","requestObj","headers","Authorization","config","console","log","getSharedCalendar","id","request","get","then"],"sources":["/Users/ronikoskinen/environments/aikataulujenSovittaja/aikataulujen-sovittaja/src/services/calendars.js"],"sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3003/api/privatecalendar'\nconst SharedCalendarBaseUrl = 'http://localhost:3003/api/sharedcalendar'\n\nlet token = null\n//kirjautumisen jälkeen asetetaan tähän token\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\n/**\n * sharedCalendar muotoa \n * @param password Tämä on password stringinä, se hashataan sitten backendissä\n *  funktiolla luodaan uusi jaettu kalenteri\n * @returns uuden luodun jaetun kalenterin ID stringinä\n */\nconst createSharedCalendar = async (password) => {\n    const newObj = {password: password} \n    const response = await axios.post(SharedCalendarBaseUrl, newObj)\n    return response.data\n}\n\n/**\n * @param newObject on privateCalendar, joka halutaan lisätä\n */\nconst createPrivateCalendar = async (newObject) => {\n    //lisätään objektiin tieto jaetun kalenterin id:stä. Tämä parsetaan sitten backendissä takaisin.\n   const requestObj = {\n    headers: { Authorization: token },\n    //sharedCalendarID: sharedCalendarID,\n    ...newObject\n   }\n    const response = await axios.post(baseUrl, requestObj, config)\n    console.log(response)\n    return response.data\n}\n\nconst getSharedCalendar = async (id) => {\n    const config = {\n        headers: { Authorization: token }\n    }\n    const request = axios.get(`${SharedCalendarBaseUrl}/${id}`, config)\n    return request.then(response => response.data)\n}\n\nexport default { setToken, createSharedCalendar, createPrivateCalendar, getSharedCalendar }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,2CAA2C;AAC3D,MAAMC,qBAAqB,GAAG,0CAA0C;AAExE,IAAIC,KAAK,GAAG,IAAI;AAChB;AACA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;EACzBF,KAAK,GAAI,UAASE,QAAS,EAAC;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;EAC7C,MAAMC,MAAM,GAAG;IAACD,QAAQ,EAAEA;EAAQ,CAAC;EACnC,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACR,qBAAqB,EAAEM,MAAM,CAAC;EAChE,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA;AACA;AACA,MAAMC,qBAAqB,GAAG,MAAOC,SAAS,IAAK;EAC/C;EACD,MAAMC,UAAU,GAAG;IAClBC,OAAO,EAAE;MAAEC,aAAa,EAAEb;IAAM,CAAC;IACjC;IACA,GAAGU;EACJ,CAAC;EACA,MAAMJ,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACT,OAAO,EAAEa,UAAU,EAAEG,MAAM,CAAC;EAC9DC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;EACrB,OAAOA,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMS,iBAAiB,GAAG,MAAOC,EAAE,IAAK;EACpC,MAAMJ,MAAM,GAAG;IACXF,OAAO,EAAE;MAAEC,aAAa,EAAEb;IAAM;EACpC,CAAC;EACD,MAAMmB,OAAO,GAAGtB,KAAK,CAACuB,GAAG,CAAE,GAAErB,qBAAsB,IAAGmB,EAAG,EAAC,EAAEJ,MAAM,CAAC;EACnE,OAAOK,OAAO,CAACE,IAAI,CAACf,QAAQ,IAAIA,QAAQ,CAACE,IAAI,CAAC;AAClD,CAAC;AAED,eAAe;EAAEP,QAAQ;EAAEE,oBAAoB;EAAEM,qBAAqB;EAAEQ;AAAkB,CAAC"},"metadata":{},"sourceType":"module"}