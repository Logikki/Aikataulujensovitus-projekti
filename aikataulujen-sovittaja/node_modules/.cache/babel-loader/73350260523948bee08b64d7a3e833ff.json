{"ast":null,"code":"var _jsxFileName = \"/Users/ronikoskinen/environments/aikataulujenSovittaja/aikataulujen-sovittaja/src/App.js\",\n  _s = $RefreshSig$();\nimport getCalendar from './services/getCalendar';\nimport { useState } from 'react';\nimport FetchCalendarForm from './components/FetchCalendarForm';\nimport calendarService from './services/calendars';\nimport calendarLoginService from './services/calendarLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //tänne tallennetaan haettu kalenteri tekstinä\n  const [kasiteltavaKalenteri, setKasiteltavaKalenteri] = useState('');\n  //url laatikkoa varten\n  const [kalenteriUrl, setUrl] = useState('');\n  const sharedCalendarID = uses;\n  //Asetetaan kalenteri token onnistuneen kirjautumisen jälkeen \n  //myöhempää tunnistautumista varten\n  const [calendarToken, setCalendarToken] = useState('');\n  const handleDownload = event => {\n    event.preventDefault();\n    getCalendar.download(kalenteriUrl, setKasiteltavaKalenteri);\n    console.log(\"kalenteri: \" + kasiteltavaKalenteri);\n  };\n  const testi = async () => {\n    const testiPrivateCalendar = {\n      \"freeTimes\": [{\n        \"id\": \"1\",\n        \"start\": \"2023-03-07T10:30:00\",\n        \"end\": \"2023-03-07T13:00:00\"\n      }, {\n        \"id\": \"2\",\n        \"start\": \"2023-03-08T09:30:00\",\n        \"end\": \"2023-03-08T11:30:00\"\n      }, {\n        \"id\": \"3\",\n        \"start\": \"2023-03-08T12:00:00\",\n        \"end\": \"2023-03-08T15:00:00\"\n      }, {\n        \"id\": \"4\",\n        \"start\": \"2023-03-06T11:30:00\",\n        \"end\": \"2023-03-06T14:30:00\"\n      }]\n    };\n    const salasana = \"salainen\";\n    //esimerkkikutsu uuden jaetun kalenterin luonnista\n    const uudenLuodunKalenterinID = await calendarService.createSharedCalendar(salasana);\n    //credentials kirjautmista varten\n    const credentials = {\n      sharedCalendarID: uudenLuodunKalenterinID,\n      password: salasana\n    };\n    //kirjaudutaan kalenteriin ja vastaanotetaan token\n    const loginInfo = await calendarLoginService.calendarLogin(credentials);\n    console.log(loginInfo);\n    //asetetaan token!\n    const token = loginInfo.token;\n    calendarService.setToken(token);\n    //lisätään uuteen jaettuun kalenteriin private kalenteri\n    const response = await calendarService.createPrivateCalendar(testiPrivateCalendar);\n    console.log(response);\n  };\n  testi();\n\n  //demon vuoksi laitetaan kasiteltavaKalenteri näkyviin sivulle\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: kasiteltavaKalenteri\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"K+yktht26MQlsUHJLFQZKYetZNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["getCalendar","useState","FetchCalendarForm","calendarService","calendarLoginService","App","kasiteltavaKalenteri","setKasiteltavaKalenteri","kalenteriUrl","setUrl","sharedCalendarID","uses","calendarToken","setCalendarToken","handleDownload","event","preventDefault","download","console","log","testi","testiPrivateCalendar","salasana","uudenLuodunKalenterinID","createSharedCalendar","credentials","password","loginInfo","calendarLogin","token","setToken","response","createPrivateCalendar"],"sources":["/Users/ronikoskinen/environments/aikataulujenSovittaja/aikataulujen-sovittaja/src/App.js"],"sourcesContent":["import getCalendar from './services/getCalendar'\nimport {useState} from 'react'\nimport FetchCalendarForm from './components/FetchCalendarForm'\nimport calendarService from './services/calendars'\nimport calendarLoginService from './services/calendarLogin'\n\nconst App = () => {\n  //tänne tallennetaan haettu kalenteri tekstinä\n  const [kasiteltavaKalenteri, setKasiteltavaKalenteri] = useState('') \n  //url laatikkoa varten\n  const [kalenteriUrl, setUrl] = useState('') \n  const sharedCalendarID = uses\n  //Asetetaan kalenteri token onnistuneen kirjautumisen jälkeen \n  //myöhempää tunnistautumista varten\n  const [calendarToken, setCalendarToken] = useState('')\n  const handleDownload = (event) => {\n    event.preventDefault()\n    getCalendar\n      .download(kalenteriUrl, setKasiteltavaKalenteri)\n      console.log(\"kalenteri: \" + kasiteltavaKalenteri)\n  }\n  \n  const testi = async () => {\n    const testiPrivateCalendar = {\n    \"freeTimes\": [ {\n    \"id\": \"1\",\n    \"start\": \"2023-03-07T10:30:00\", \"end\": \"2023-03-07T13:00:00\"\n    }, {\n    \"id\": \"2\",\n    \"start\": \"2023-03-08T09:30:00\", \"end\": \"2023-03-08T11:30:00\"\n    }, {\n    \"id\": \"3\",\n    \"start\": \"2023-03-08T12:00:00\", \"end\": \"2023-03-08T15:00:00\"\n    }, {\n    \"id\": \"4\",\n    \"start\": \"2023-03-06T11:30:00\", \"end\": \"2023-03-06T14:30:00\"\n    } ]\n    }\n    const salasana = \"salainen\"\n    //esimerkkikutsu uuden jaetun kalenterin luonnista\n    const uudenLuodunKalenterinID = await calendarService.createSharedCalendar(salasana)\n    //credentials kirjautmista varten\n    const credentials = {sharedCalendarID: uudenLuodunKalenterinID, password:\n    salasana}\n    //kirjaudutaan kalenteriin ja vastaanotetaan token\n    const loginInfo = await calendarLoginService.calendarLogin(credentials) \n    console.log(loginInfo)\n    //asetetaan token!\n    const token = loginInfo.token\n    calendarService.setToken(token)\n    //lisätään uuteen jaettuun kalenteriin private kalenteri\n    const response = await calendarService.createPrivateCalendar(testiPrivateCalendar) \n    console.log(response)\n    } \n\n    testi()\n    \n  //demon vuoksi laitetaan kasiteltavaKalenteri näkyviin sivulle\n  return (\n    <div>\n      <div>\n    {/* <FetchCalendarForm \n    kalenteriUrl={kalenteriUrl} \n    handleKalenteriUrlChange={({ target }) => setUrl(target.value)} \n    handleFetchCalendar={handleDownload}\n    /> */}\n    </div>\n  <p>\n    {kasiteltavaKalenteri} \n  </p>\n  </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAChD,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,oBAAoB,MAAM,0BAA0B;AAAA;AAE3D,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpE;EACA,MAAM,CAACO,YAAY,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAMS,gBAAgB,GAAGC,IAAI;EAC7B;EACA;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMa,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,EAAE;IACtBhB,WAAW,CACRiB,QAAQ,CAACT,YAAY,EAAED,uBAAuB,CAAC;IAChDW,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGb,oBAAoB,CAAC;EACrD,CAAC;EAED,MAAMc,KAAK,GAAG,YAAY;IACxB,MAAMC,oBAAoB,GAAG;MAC7B,WAAW,EAAE,CAAE;QACf,IAAI,EAAE,GAAG;QACT,OAAO,EAAE,qBAAqB;QAAE,KAAK,EAAE;MACvC,CAAC,EAAE;QACH,IAAI,EAAE,GAAG;QACT,OAAO,EAAE,qBAAqB;QAAE,KAAK,EAAE;MACvC,CAAC,EAAE;QACH,IAAI,EAAE,GAAG;QACT,OAAO,EAAE,qBAAqB;QAAE,KAAK,EAAE;MACvC,CAAC,EAAE;QACH,IAAI,EAAE,GAAG;QACT,OAAO,EAAE,qBAAqB;QAAE,KAAK,EAAE;MACvC,CAAC;IACD,CAAC;IACD,MAAMC,QAAQ,GAAG,UAAU;IAC3B;IACA,MAAMC,uBAAuB,GAAG,MAAMpB,eAAe,CAACqB,oBAAoB,CAACF,QAAQ,CAAC;IACpF;IACA,MAAMG,WAAW,GAAG;MAACf,gBAAgB,EAAEa,uBAAuB;MAAEG,QAAQ,EACxEJ;IAAQ,CAAC;IACT;IACA,MAAMK,SAAS,GAAG,MAAMvB,oBAAoB,CAACwB,aAAa,CAACH,WAAW,CAAC;IACvEP,OAAO,CAACC,GAAG,CAACQ,SAAS,CAAC;IACtB;IACA,MAAME,KAAK,GAAGF,SAAS,CAACE,KAAK;IAC7B1B,eAAe,CAAC2B,QAAQ,CAACD,KAAK,CAAC;IAC/B;IACA,MAAME,QAAQ,GAAG,MAAM5B,eAAe,CAAC6B,qBAAqB,CAACX,oBAAoB,CAAC;IAClFH,OAAO,CAACC,GAAG,CAACY,QAAQ,CAAC;EACrB,CAAC;EAEDX,KAAK,EAAE;;EAET;EACA,oBACE;IAAA,wBACE;MAAA;MAAA;MAAA;IAAA,QAMI,eACR;MAAA,UACGd;IAAoB;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAER,CAAC;AAAA,GAlEKD,GAAG;AAAA,KAAHA,GAAG;AAoET,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}