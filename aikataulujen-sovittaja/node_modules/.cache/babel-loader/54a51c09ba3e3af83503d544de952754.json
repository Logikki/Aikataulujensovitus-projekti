{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/calendarlogin';\n\n/**\n * \n * @param {sharedCalendarID: string, password: string} calendarCredentials \n * kutsutaan parametrilla, joka on edellä mainitussa muodossa.\n * @returns {token, sharedCalendarID} tai vaihteohtoisesti error viestin, jos\n * id tai salasana ei ole oikein.\n * \n * Token pitää sitten tallentaa johonkin muuttujaan, että sitä voidaan käyttää\n * myöhemmissä pyynnöissä.\n */\nconst calendarLogin = async calendarCredentials => {\n  const response = await axios.post(baseUrl, calendarCredentials);\n  return response.data;\n};\nexport default {\n  calendarLogin\n};","map":{"version":3,"names":["axios","baseUrl","calendarLogin","calendarCredentials","response","post","data"],"sources":["/Users/ronikoskinen/environments/aikataulujenSovittaja/aikataulujen-sovittaja/src/services/calendarLogin.js"],"sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/calendarlogin'\n\n/**\n * \n * @param {sharedCalendarID: string, password: string} calendarCredentials \n * kutsutaan parametrilla, joka on edellä mainitussa muodossa.\n * @returns {token, sharedCalendarID} tai vaihteohtoisesti error viestin, jos\n * id tai salasana ei ole oikein.\n * \n * Token pitää sitten tallentaa johonkin muuttujaan, että sitä voidaan käyttää\n * myöhemmissä pyynnöissä.\n */\nconst calendarLogin = async calendarCredentials => {\n  const response = await axios.post(baseUrl, calendarCredentials)\n  return response.data\n}\n\nexport default { calendarLogin }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,oBAAoB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,MAAMC,mBAAmB,IAAI;EACjD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,EAAEE,mBAAmB,CAAC;EAC/D,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAe;EAAEJ;AAAc,CAAC"},"metadata":{},"sourceType":"module"}